apply plugin: 'com.android.library'

android {
    def androidSdk = rootProject.ext.androidSdk
    compileSdkVersion androidSdk.compileSdkVersion
    defaultConfig {
        minSdkVersion androidSdk.minSdkVersion
        targetSdkVersion androidSdk.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        vectorDrawables.useSupportLibrary = true

        //使用buildConfigField向BuildConfig类中写入常量
        buildConfigField "int", "BUILD_VERSION_CODE", rootProject.ext.versionCode + ""
        buildConfigField "String", "BUILD_VERSION_NAME", "\"" + rootProject.ext.versionName + "\""
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            main.java.srcDirs = ['src']
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
            } else {
                resources {
                    //正式版本时，排除alone文件夹下所有调试文件
                    exclude 'src/alone/*'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    dataBinding {
//        enabled true
//    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api project(':library-theme')

    def dependencies = rootProject.ext.dependencies

//    api project(':framework')
    api dependencies["lite-framework"]
    api dependencies["arouter-api"]

    annotationProcessor dependencies["room-compiler"]
}
