apply plugin: 'com.android.application'

def thirdParty = rootProject.ext.thirdParty

android {

    def androidSdk = rootProject.ext.androidSdk
    compileSdkVersion androidSdk.compileVersion

    defaultConfig {
        applicationId "com.journeyOS.liteweather"
        minSdkVersion androidSdk.minVersion
        targetSdkVersion androidSdk.targetVersion
        versionCode rootProject.ext.verCode
        versionName rootProject.ext.verName

        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    signingConfigs {
        release {
            File strFile = new File("../keystore/liteweather.keystore")
            storeFile file(strFile)
            keyAlias 'journeyOS'
            keyPassword 'liteweather'
            storePassword 'qazwsxedc'
        }
        debug {
            File strFile = new File("../keystore/liteweather.keystore")
            storeFile file(strFile)
            keyAlias 'journeyOS'
            keyPassword 'liteweather'
            storePassword 'qazwsxedc'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
//            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            main.java.srcDirs = ['src']
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        // lint检查不报错
        abortOnError false
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.all {
                outputFileName = new File("./../../../../../app_release/", "LiteWeather.apk")
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation project(':core')
    implementation project(':plugins')

    implementation "androidx.legacy:legacy-support-v4:$thirdParty.legacy"
    implementation "androidx.appcompat:appcompat:$thirdParty.appcompat"
    implementation "com.tuyenmonkey:mkloader:$thirdParty.mkloader"

    annotationProcessor "com.github.journeyOS:LiteRouter-compiler:$thirdParty.literouter_compiler"
    annotationProcessor "com.jakewharton:butterknife-compiler:$thirdParty.butterknife"
    annotationProcessor "androidx.room:room-compiler:$thirdParty.room_compiler"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$thirdParty.lifecycle_compiler"
}

defaultTasks 'clean', 'assembleRelease'