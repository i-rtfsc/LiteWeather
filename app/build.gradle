apply plugin: 'com.android.application'

android {
    def androidSdk = rootProject.ext.androidSdk
    compileSdkVersion androidSdk.compileSdkVersion
    defaultConfig {
        applicationId androidSdk.applicationId
        minSdkVersion androidSdk.minSdkVersion
        targetSdkVersion androidSdk.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        vectorDrawables.useSupportLibrary = true

        //使用buildConfigField向BuildConfig类中写入常量
        buildConfigField("int", "BUILD_VERSION_CODE", rootProject.ext.versionCode + "")
        buildConfigField("String", "BUILD_VERSION_NAME", "\"" + rootProject.ext.versionName + "\"")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            main.java.srcDirs = ['src']
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        release {
            File strFile = new File("../keystore/liteweather.keystore")
            storeFile file(strFile)
            keyAlias 'journeyOS'
            keyPassword 'liteweather'
            storePassword 'qazwsxedc'
        }
        debug {
            File strFile = new File("../keystore/liteweather.keystore")
            storeFile file(strFile)
            keyAlias 'journeyOS'
            keyPassword 'liteweather'
            storePassword 'qazwsxedc'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "BUILD_DEBUG", "false")
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "BUILD_DEBUG", "true")
            signingConfig signingConfigs.debug
        }
    }

    //统一资源前缀，规范资源引用
    //https://www.jianshu.com/p/e498a4f8bfa7
    //resourcePrefix "app_"
    dataBinding {
        enabled true
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.all {
                outputFileName = new File("./../../../../../build/app_release/", "LiteWeather.apk")
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //组件依赖基础库
    implementation project(':library-base')
    //依赖控件库
    implementation project(':library-widget')
    //主业务模块
    implementation project(':module-main')
    //身份验证模块
    implementation project(':module-weather')
    //城市模块
    implementation project(':module-city')
    //应用模块
    implementation project(':module-setting')
}


defaultTasks 'clean', 'assembleRelease'